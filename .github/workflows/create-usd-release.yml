# Workflow to build USD versions required to run the usd plugins
# this assumes there is a Release created called USD Artifacts
name: Create USD Release
run-name: Create USD Release v${{ github.event.inputs.usd_version }}

on:
  workflow_dispatch:
    inputs:
      usd_version:
        description: 'USD Version to build'
        required: true
        default: '2405'
jobs:
  build:
    name: Build USD ${{ github.event.inputs.usd_version }}
    runs-on: macOS-14
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Setup USD version
        shell: pwsh
        run: |
          $usd_version="${{ github.event.inputs.usd_version }}"
          $usdFormattedVersion="$($usd_version.Substring(0,2)).$($usd_version.Substring(2))"
          "USD_FORMATTED_VERSION=$usdFormattedVersion" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Ninja (Cross-platform)
        run: |
          python -m pip install ninja

      - name: Install Additional Dependencies (macOS-14)
        run: |
          brew uninstall --ignore-dependencies giflib
          brew cleanup

      - name: Clone USD
        run: git clone --branch v${{ env.USD_FORMATTED_VERSION }} --depth 1 https://github.com/PixarAnimationStudios/OpenUSD.git

      - name: Install Python Dependencies
        run: |
          python -m pip install PySide6
          python -m pip install pyopengl

      - name: Build USD
        shell: pwsh
        run: |
          $file = "OpenUSD/build_scripts/build_usd.py"
          $env:CMAKE_PREFIX_PATH = "/usr/local;$env:CMAKE_PREFIX_PATH"
          $env:DYLD_LIBRARY_PATH = "/usr/local/lib;$env:DYLD_LIBRARY_PATH"
          $env:LD_LIBRARY_PATH = "/usr/local/lib;$env:LD_LIBRARY_PATH"
          $abi_arg = ""
          $generator = "--generator Ninja"
          $python_cmd = "python $file `${{ github.workspace }}/usd_build` --build-shared --openimageio --tools --no-python --usd-imaging --build-variant release $abi_arg $generator"
          Invoke-Expression $python_cmd

      - name: Remove Specific Folders Unix
        run: |
          rm -rf ${{ github.workspace }}/usd_build/build
          rm -rf ${{ github.workspace }}/usd_build/share
          rm -rf ${{ github.workspace }}/usd_build/src

      - name: Set USD Paths to Environment variable to USD_BUILD_PATH
        if: env.exists == 'false'
        shell: pwsh
        run: |
          $localPath = "/Users/runner/work/USD-Fileformat-plugins/USD-Fileformat-plugins/usd_build"
          $files = @(
            "${{ github.workspace }}/usd_build/cmake/pxrTargets.cmake",
            "${{ github.workspace }}/usd_build/lib/cmake/OpenImageIO/OpenImageIOConfig.cmake",
            "${{ github.workspace }}/usd_build/lib/cmake/OpenImageIO/OpenImageIOTargets.cmake"
          )
          $replacementPath = '${USD_BUILD_PATH}'
          foreach ($file in $files) {
            (Get-Content $file) -replace [regex]::Escape($localPath), $replacementPath | Set-Content $file
            $content = 'set(USD_BUILD_PATH "$ENV{USD_BUILD_PATH}")' + "`r`n" + (Get-Content $file -Raw)
            $content | Set-Content $file
          }

      - name: Package Build Artifacts Unix
        run: |
          cd ${{ github.workspace }}/usd_build
          zip -r ../usd-${{ github.event.inputs.usd_version }}.zip *

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: usd-${{ github.event.inputs.usd_version }}
          path: ${{ github.workspace }}/usd-${{ github.event.inputs.usd_version }}.zip